parameters:
  #####################################exeperiment     
    test.configuration:    
        base:
            allowed: true
            form: 
                   formTypeClass: 'TMSolution\SampleEntitiesBundle\Form\ProductCategoryType'
                   action: list
            models:
                    get:
                        name: some_model
                        method: findOneById
                        returnResultToView: true
                        resultParameter: productCategory 
                   
        actions: 
            list:
                templates:
                    element: 'productcategory\index.html.twig' 
                models:
                    list:
                        name: some_model
                        method: search
                        returnResultToView: true
                        resultParameter: productCategories
            new:
               form: 
                   action: create 
               #                routeName: aaa    
               #                parameters:
               #                value        
               templates:
                    element: 'productcategory\new.html.twig'    
            create:
                form:
                        action: new
                templates:
                    element: 'productcategory\new.html.twig'
                models:
                    create:
                        name: some_model
                        method: save
                        returnResultToView: true
                        resultParameter: result 
                redirection: 
                    routeName: list
                    parameters:
                        
            get:
                templates:
                    element: 'productcategory\show.html.twig'   
                redirection: 
                    routeName: new
                    parameters:                        
            edit:
                form:
                   formTypeClass: 'TMSolution\SampleEntitiesBundle\Form\ProductCategoryType'
                   action: update
                   paremeters: 
                            -id
                models:
                   get:
                        name: some_model
                        method: findOneById
                        returnResultToView: true
                        resultParameter: entity 
                templates:
                    element: 'productcategory\edit.html.twig'
                    
            update:
                form:
                   formTypeClass: 'TMSolution\SampleEntitiesBundle\Form\ProductCategoryType'
                   action: update
                   paremeters: 
                            -id
                models:
                    get:
                        name: some_model
                        method: findOneById
                        returnResultToView: true
                        resultParameter: entity
                    update:
                        name: some_model
                        method: update
                        returnResultToView: true
                        resultParameter: entity    
                templates:
                    element: 'productcategory\edit.html.twig'         
            delete:
                form:
                   action: delete     
                models:
                    delete:
                        name: some_model
                        method: delete
                        returnResultToView: true
                        resultParameter: entity   
                templates:
                    element: 'productcategory\list.html.twig'
                redirection: 
                    routeName: list
 
#
#                    
#                    
#            edit:
#                allowed: true
#                forms:
#                    edit:
#                        formTypeClass: 'TMSolution\SampleEntitiesBundle\Form\ProductCategoryType'
#                        action: new
#                    delete:
#                        formTypeClass: 'TMSolution\SampleEntitiesBundle\Form\ProductCategoryType'
#                        action: new    
#                templates:
#                    element: 'productcategory\new.html.twig'
#                models:
#                    get:
#                        name: some_model
#                        method: getSomething
#                        returnResultToView: true
#                        resultParameter: result 
#                    update:
#                        name: some_model
#                        method: getSomething
#                        returnResultToView: true
#                        resultParameter: result
#                redirection: 
#                    routeName: new        
#                    
#            update:
#                allowed: true
#                forms:
#                    udpate:
#                        formTypeClass: 'TMSolution\SampleEntitiesBundle\Form\ProductCategoryType'
#                        action: new
#                templates:
#                    element: 'productcategory\new.html.twig'
#                models:
#                    get:
#                        name: some_model
#                        method: getSomething
#                        returnResultToView: true
#                        resultParameter: result 
#                    update:
#                        name: some_model
#                        method: getSomething
#                        returnResultToView: true
#                        resultParameter: result
#                redirection: 
#                    routeName: new        
                   
  #####################################                   
                
                
services:
    
    tm_solution_prototype.application_mapper:
        class: TMSolution\MapperBundle\Util\ApplicationMapper     
        arguments: [%tm_solution_mapper.applications%]
      
    tm_solution_prototype.entity_mapper: 
        class: TMSolution\MapperBundle\Util\EntityMapper
        arguments: [%tm_solution_mapper.entities%]
    
    tm_solution_prototype.request_analyzer:
        class: TMSolution\RequestAnalyzerBundle\Util\RequestAnalyzer
        arguments: ['@tm_solution_prototype.application_mapper', '@tm_solution_prototype.entity_mapper']
    
    tm_solution_prototype.base_configuration:
        class: TMSolution\ConfigurationBundle\Util\Configuration
        arguments: [%tm_solution_prototype.configuration%]
    
    tm_solution_prototype.configuration_factory:
        class: TMSolution\ControllerConfigurationBundle\Util\ControllerConfigurationFactory
        arguments: ['@tm_solution_prototype.base_configuration','@tm_solution_prototype.request_analyzer']
   
    tm_solution_prototype.prototype_controller:
        class: TMSolution\PrototypeBundle\Controller\PrototypeController
        arguments: ['@service_container','@tm_solution_prototype.configuration_factory']
        
    tm_solution_prototype.test_controller:
        class: TMSolution\PrototypeBundle\Controller\TestController
        arguments: ['@service_container','@tm_solution_prototype.configuration_factory']   
        
    tm_solution_prototype.ticket:
        class: TMSolution\PrototypeBundle\Util\Ticket
        arguments: []       
        shared: false
            
 
            
#####################################exeperiment            
 
    
    app.post_voter:
        class: TMSolution\PrototypeBundle\Sample\SampleVoter
        arguments: ['@security.access.decision_manager']
        tags:
            - { name: security.voter }
        public: false

    
    
    tm_solution_prototype.test_configuration:
        class: TMSolution\ConfigurationBundle\Util\Configuration
        arguments: [%test.configuration%]
        tags:
            - { name: tm_solution_prototype.controller_configuration, applicationPath: 'admin/ala/ma/kota', entityAlias: 'product-category' }
    
    some_model:
        class: TMSolution\ModelBundle\Util\Model
        arguments: ['@doctrine.orm.entity_manager']
        
    
    
    tm_solution_prototype.test_configuration1:
        class: TMSolution\ConfigurationBundle\Util\Configuration
        arguments: [%test.configuration%]
        tags:
            - { name: tm_solution_prototype.controller_configuration, applicationPath: 'api', entityAlias: 'product-category' }        